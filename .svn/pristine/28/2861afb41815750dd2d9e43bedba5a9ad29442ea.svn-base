package gui;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Map;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.KeyStroke;

public class MenuBar extends JMenuBar {
    
    private static final int TEXT_LENGTH = 3;
    
    private KeyBindings myKeyBindings;
    private GamePanel myGamePanel;
    private Map<String, Integer> myKeys;
    private JTextField myLeftField;
    private JTextField myRightField;
    private JTextField myDownField;
    private JTextField myCWField;
    private JTextField myCCWField;
    private JTextField myDropField;
    
    

    public MenuBar(final GamePanel theGamePanel) {
        super();
        initializeFields();
        myKeyBindings = new KeyBindings("Key Bindings");
        myGamePanel = theGamePanel;
        myKeys = myGamePanel.getKeys();
        createMenuBar();
    }
    
    private void initializeFields() {
        myLeftField = new JTextField(TEXT_LENGTH);
        myLeftField.setFocusable(false);
        myLeftField.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e){
                System.out.println("Clicked");
            }
            
        });
        
        myRightField = new JTextField(TEXT_LENGTH);
        myDownField = new JTextField(TEXT_LENGTH);
        myCWField = new JTextField(TEXT_LENGTH);
        myCCWField = new JTextField(TEXT_LENGTH);
        myDropField = new JTextField(TEXT_LENGTH);
    }
    
    private void createMenuBar() {
        JMenu optionsMenu = new JMenu("Options");
        optionsMenu.setMnemonic(KeyEvent.VK_O);
        
        JMenuItem keyBindings = new JMenuItem("Key Bindings");
        keyBindings.setMnemonic(KeyEvent.VK_K);       
        keyBindings.addActionListener(new MyActionListener());
        optionsMenu.add(keyBindings);
        
        add(optionsMenu);
    }
    
    
    private class KeyBindings extends JFrame {
        
        
        
        KeyBindings(final String theName) {
            super(theName);
            start();
        }
        
        private void start() {
            
            
            
            final JPanel primary = new JPanel();
            
            final Box keyPanel = new Box(BoxLayout.PAGE_AXIS);
            
            
            final JPanel leftPanel = createPanel("Left: ", myLeftField);
            keyPanel.add(leftPanel);
            
            final JPanel rightPanel = createPanel("Right: ", myRightField);
            keyPanel.add(rightPanel);
            
            final JPanel downPanel = createPanel("Down: ", myDownField);
            keyPanel.add(downPanel);
            
            final JPanel cWPanel = createPanel("Clockwise: ", myCWField);
            keyPanel.add(cWPanel);
            
            final JPanel cCWPanel = createPanel("CounterClockwise: ", myCCWField);
            keyPanel.add(cCWPanel);
            
            final JPanel dropPanel = createPanel("Drop: ", myDropField);
            keyPanel.add(dropPanel);
            
            final JPanel buttonPanel = new JPanel();
            final JButton saveButton = new JButton("Commit");
            saveButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent arg0) {
                    
                }
            });
            buttonPanel.add(saveButton);
            
            final JButton cancelButton = new JButton("Cancel");
            cancelButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    
                }
            });
            buttonPanel.add(cancelButton);
         
            keyPanel.add(buttonPanel);
            
            primary.add(keyPanel, BorderLayout.WEST);
            
            
            add(primary);
            //this.setDefaultCloseOperation(EXIT_ON_CLOSE);
            this.setResizable(false);
            pack();
            this.setLocationRelativeTo(null);  // need to center on other JFrame later
        }
        
        
        private JPanel createPanel(final String theLabel, final JTextField theField) {
            final JPanel panel = new JPanel(new FlowLayout());
            panel.add(new JLabel(theLabel));
            panel.add(theField);
            return panel;
        }
        
        
    }
    
    
    private class MyActionListener implements ActionListener {
        @Override
        public void actionPerformed(final ActionEvent theEvent) {
            myKeys = myGamePanel.getKeys();
            myKeyBindings.setVisible(true);
            myKeyBindings.setAlwaysOnTop(true);
            myGamePanel.pause();
            
            
            
            myLeftField.setText(KeyEvent.getKeyText(myKeys.get("left")));
            myRightField.setText(KeyEvent.getKeyText(myKeys.get("right")));
            myDownField.setText(KeyEvent.getKeyText(myKeys.get("down")));
            myCWField.setText(KeyEvent.getKeyText(myKeys.get("cw")));
            myCCWField.setText(KeyEvent.getKeyText(myKeys.get("ccw")));
            myDropField.setText(KeyEvent.getKeyText(myKeys.get("drop")));
        }
    }

}
