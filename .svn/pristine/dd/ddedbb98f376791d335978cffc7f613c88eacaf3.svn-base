package sound;

/**
 * This enum encapsulates all the sound effects of a game, so as to separate the sound playing
 * codes from the game codes.
 * 1. Define all your sound effect names and the associated wave file.
 * 2. To play a specific sound, simply invoke SoundEffect.SOUND_NAME.play().
 * 3. You might optionally invoke the static method SoundEffect.init() to pre-load all the
 *    sound files, so that the play is not paused while loading the file for the first time.
 * 4. You can use the static variable SoundEffect.volume to mute the sound.
 * 
 * @author http://www3.ntu.edu.sg/home/ehchua/programming/java/J8c_PlayingSound.html
 * @author Modified by Justin Arnett
 * @version 12 March 2015
 */
public enum SoundEffects {
    
    /** Sound for when a piece freezes in place. */
    BLOCK("./sounds/block.wav"),
    /** Sound for when a row(s) of blocks is cleared. */
    CLEAR("./sounds/clear.wav"),
    /** Sound for when an error in the menu occurs. */
    ERROR("./sounds/error.wav");
   

    /** Starting volume level. */
    private boolean myMuted;

    /** Each sound effect has its own clip, loaded with its own sound file. */
    private String mySoundFileName;

    
    /**
     * Constructor to construct each element of the enum with its own sound file.
     * 
     * @param theSoundFileName The name of the sound file.
     */
    SoundEffects(final String theSoundFileName) {
        mySoundFileName = theSoundFileName;
        myMuted = false;
    }

    
    /**
     * Play or Re-play the sound effect from the beginning, by rewinding.
     */
    public void play(final SoundPlayer thePlayer) {
        if (!myMuted) {
            thePlayer.play(mySoundFileName);
        }
    }
    
    
    /**
     * Gets the file name of the sound file. 
     */
    public String getFileName() {
        return mySoundFileName;
    }
    
    
    public void setVolume(final boolean theVolume, final SoundPlayer thePlayer) {
        myMuted = theVolume;
        if (myMuted) {
            thePlayer.stopAll();
        }
    }


    /**
     * Optionally pre-loads all of the sound files.
     */
    static void init(final SoundPlayer thePlayer) {
        values(); // calls the constructor for all the elements
    }

}


